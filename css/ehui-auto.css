/*!
  EhUI is free and open source
  Copyright (c) Ehan Ahamed and contributors
  https://ehan.dev/ehui/LICENSE.txt
*/
:root {
  color-scheme: light;
}

html {
  height: auto;
  font-size: 18px;
  scroll-behavior: smooth;
}

@media only screen and (max-width: 800px) {
  html {
    font-size: 16px;
  }
}
body {
  height: auto;
  background-color: #FBFCFC;
  color: #343a40;
  font-size: 1rem;
  line-height: 1.4;
  font-family: "nunito", sans-serif;
  font-weight: normal;
  margin: 0px;
}

::selection {
  background-color: #C499FF;
  color: #343a40;
}

h1,
.h1 {
  font-size: 3.4rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h2,
.h2 {
  font-size: 2.8rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h3,
.h3 {
  font-size: 2.2rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h4,
.h4 {
  font-size: 1.6rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h1, h2, h3, h4,
.h1, .h2, .h3, .h4 {
  line-height: 1.2;
}

h5,
.h5,
p {
  font-size: 1rem;
  font-weight: normal;
  margin-top: 0px;
  margin-bottom: 1rem;
}

/* TEMPORARY FIX */
p {
  margin-block-end: 0px;
}

h6,
.h6,
small {
  font-size: 0.8rem;
  font-weight: normal;
  margin-bottom: 1rem;
}

h5, p, h6, small,
.h5, .h6 {
  line-height: 1.4;
}

b,
.b {
  font-weight: bold;
}

i,
.i {
  font-style: italic;
}

/*
nerdfont icons shouldn't have same styling as italic element lol
*/
i.nf {
  font-style: normal;
}

s,
.s {
  text-decoration: line-through;
}

mark,
.mark {
  background-color: #343a40;
  color: #FBFCFC;
  border-radius: 0.4rem;
  padding: 0.2rem 0.4rem;
  font-size: 1rem;
  line-height: 1.4;
}

code,
.code {
  font-family: monospace;
  background-color: #F0F2F5;
  border-radius: 0.4rem;
  padding: 0.2rem 0.4rem;
  font-size: 1rem;
  line-height: 1.4;
}

.box {
  background-color: #F0F2F5;
  color: #343a40;
  border: 0.2rem solid #F0F2F5;
  border-radius: 0.8rem;
  padding: 1rem;
}

.hero {
  border-bottom: 0.2rem solid #E1E2E6;
  text-align: center;
  padding: 1rem;
  padding-bottom: 4rem;
  margin: 4rem 1rem;
}

.topmost {
  /* "topmost" is those alert bar thingies that are ABOVE the header, they're the top-most */
  margin: 1rem;
}

header,
.header {
  position: static;
  /* TEMP*/
  height: 4rem;
  background-color: #FBFCFC;
  border-bottom: 0.2rem solid #E1E2E6;
  padding: 0px;
  margin-top: 0px;
  margin-left: 0px;
  margin-right: 0px;
  margin-bottom: 1rem;
}

header.sticky,
.header.sticky {
  position: sticky;
  z-index: 100;
  top: 0px;
  margin-top: 0px;
  margin-left: 0px;
  margin-right: 0px;
  margin-bottom: 0px;
}

header > .nav {
  display: flex;
  gap: 1rem;
  align-items: center;
  margin: 0px 1rem;
}

.nav > div {
  border-bottom: 0.2rem solid #FBFCFC;
}

.nav > div.current {
  border-bottom: 0.2rem solid #6639BF;
}

.nav > div.current > a {
  color: #6639BF;
}

footer,
.footer {
  border-top: 0.2rem solid #E1E2E6;
  text-align: center;
  padding: 1rem;
  padding-top: 4rem;
  margin: 4rem 1rem;
}

table {
  border-collapse: separate;
  border-spacing: 0px;
  border-radius: 0.8rem;
  border: 0.2rem solid #E1E2E6;
}

td {
  font-weight: normal;
  text-align: left;
  padding: 1rem;
}

th {
  font-weight: bold;
  text-align: left;
  padding: 1rem;
}

table.outer td,
table.outer th,
table.outer thead,
table.outer tbody,
table.outer tfoot {
  border: none;
}

table.inner th:not(:last-child),
table.inner td:not(:last-child) {
  border-right: 0.2rem solid #E1E2E6;
}

table.inner > thead > tr > th,
table.inner > thead > tr > td,
table.inner > tbody > tr:not(:last-child) > th,
table.inner > tbody > tr:not(:last-child) > td,
table.inner > tr:not(:last-child) > td,
table.inner > tr:not(:last-child) > th,
table.inner > thead:not(:last-child),
table.inner > tbody:not(:last-child) {
  border-bottom: 0.2rem solid #E1E2E6;
}

a,
.a {
  color: #7C49F2;
  cursor: pointer;
  border-radius: 0.4rem;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  text-decoration: none;
  transition-duration: 0.4s;
}

a:hover,
a:focus-visible,
.a:hover,
.a:focus-visible {
  color: #6639BF;
}

a:focus-visible,
.a:focus-visible {
  outline: 0.2rem solid #7C49F2;
  outline-offset: 0.4rem;
  transition-duration: 0.1s;
}

button,
.button {
  display: inline-block;
  appearance: none;
  align-items: flex-start;
  box-sizing: border-box;
  text-align: center;
  cursor: pointer;
  text-decoration: none;
  background-color: #7C49F2;
  color: #FBFCFC;
  border: 0.2rem solid #7C49F2;
  border-radius: 2rem;
  padding: 0.4rem 0.8rem;
  font-family: "nunito", sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  transition-duration: 0.4s;
}

button.alt,
.button.alt {
  background-color: #EBEDF0;
  color: #7C49F2;
  border-color: #EBEDF0;
}

button:hover,
button:focus-visible,
.button:hover,
.button:focus-visible {
  background-color: #6639BF;
  color: #FBFCFC;
}

button:focus-visible,
.button:focus-visible {
  outline: 0.2rem solid #7C49F2;
  outline-offset: 0.2rem;
  transition-duration: 0.1s;
}

::placeholder {
  color: #868e96;
  font-size: 1rem;
  font-family: "nunito", sans-serif;
  font-weight: normal;
  opacity: 1;
}

input[type=text],
input[type=password],
textarea {
  display: inline-block;
  appearance: none;
  align-items: flex-start;
  box-sizing: border-box;
  text-align: left;
  cursor: text;
  text-decoration: none;
  font-family: "nunito", sans-serif;
  background-color: #FBFCFC;
  color: #343a40;
  border: 0.2rem solid #E1E2E6;
  border-radius: 0.8rem;
  outline: none;
  padding: 0.4rem 0.8rem;
  font-size: 1rem;
  line-height: 1.4;
  transition-duration: 0.4s;
}

input[type=text]:hover,
input[type=password]:hover,
textarea:hover {
  border-color: #6639BF;
}

input[type=text]:focus,
input[type=password]:focus,
textarea:focus,
input[type=text]:focus-visible,
input[type=password]:focus-visible,
textarea:focus-visible {
  border-color: #7C49F2;
}

/*
the html of a radio should look like:

<div class="radio>
  <input type="radio" id="id" ... />
  <label for="id">text</label>
</div>
*/
.radio,
.checkbox {
  display: grid;
  grid-template-columns: 1.8rem auto 1fr;
  grid-template-areas: "input label .";
  gap: 1em;
}

.radio input,
.checkbox input {
  grid-area: input;
}

.radio label,
.checkbox label {
  grid-area: label;
}

input[type=radio],
input[type=checkbox] {
  /*
  https://moderncss.dev/pure-css-custom-styled-radio-buttons/
  https://moderncss.dev/pure-css-custom-checkbox-style/
  */
  appearance: none;
  width: 1.8rem;
  height: 1.8rem;
  margin: 0px;
  background-color: #FBFCFC;
  border: 0.2rem solid #7C49F2;
  transition-duration: 0.4s;
}

input[type=radio] {
  border-radius: 50%;
}

input[type=checkbox] {
  border-radius: 0.6rem;
}

input[type=radio]:hover,
input[type=radio]:focus-visible,
input[type=checkbox]:hover,
input[type=checkbox]:focus-visible {
  border-color: #6639BF;
}

input[type=radio]:focus-visible,
input[type=checkbox]:focus-visible {
  outline: 0.2rem solid #7C49F2;
  outline-offset: 0.2rem;
  transition-duration: 0.1s;
}

input[type=radio]:checked,
input[type=checkbox]:checked {
  background-color: #7C49F2;
  transition-duration: 0.1s;
}

.card {
  width: 40rem;
  height: 20rem;
}

.caption {
  width: 40rem;
  display: grid;
  gap: 1rem;
  grid-template-rows: 1fr;
}

.caption.centerThree {
  grid-template-columns: 1fr 4fr 1fr;
}

.caption.evenTwo {
  grid-template-columns: 1fr 1fr;
}

.caption.evenThree {
  grid-template-columns: 1fr 1fr 1fr;
}

@media only screen and (max-width: 800px) {
  .card,
  .caption {
    width: 100%;
  }
}
.card > .content {
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  background-color: #F0F2F5;
  border-radius: 0.8rem;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.card.double {
  perspective: 1000px;
}

.card.double > .content {
  display: block;
  transition: transform 0.4s;
  transform-style: preserve-3d;
  background-color: inherit;
  border-radius: 0px;
  align-items: normal;
  justify-content: normal;
  text-align: center;
}

.card.double > .content > .front,
.card.double > .content > .back {
  display: flex;
  position: absolute;
  width: 100%;
  height: 100%;
  margin-top: 0px;
  background-color: #F0F2F5;
  border-radius: 0.8rem;
  align-items: center;
  justify-content: center;
  text-align: center;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  transform: rotateX(0deg);
  box-shadow: 0px 4px 10px 2px rgba(0, 0, 0, 0.1);
}

.card.double > .content > .back {
  transform: rotateY(180deg);
}

.card.double.flip > .content {
  transform: rotateY(180deg);
}

.separator {
  display: flex;
  justify-content: center;
  align-items: center;
  color: #868e96;
}

.separator::before,
.separator::after {
  content: "";
  display: block;
  background: #E1E2E6;
  width: 100%;
  height: 0.2rem;
  margin: 0px 1rem;
}

.modal {
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 200;
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
}

.modal::before {
  content: "";
  position: fixed;
  z-index: 180;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  background-color: #F0F2F5;
  opacity: 0.6;
}

.modal > .content {
  z-index: 200;
  width: 60vw;
  background-color: #FBFCFC;
  border: 0.2rem solid #E1E2E6;
  border-radius: 0.8rem;
  padding: 1rem;
}

@media only screen and (max-width: 800px) {
  .modal {
    align-items: flex-end;
  }
  .modal > .content {
    width: 100vw;
    border: none;
    border-top: 0.2rem solid #E1E2E6;
    border-radius: 0px;
    padding-bottom: 8rem;
  }
}
.flex.pop {
  padding: 0px 1rem;
}

/* .dropdown html structure:
<div class="dropdown">
  <button>Toggle Dropdown!</button>
  <div class="content">
    <button>Something</button>
    <button>Another thing</button>
    <button>More things</button>
  </div>
</div>
*/
.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown .content {
  display: none;
  position: absolute;
  z-index: 1;
  flex-direction: column;
  align-items: stretch;
  gap: 0.4rem;
  margin-top: 0.4rem;
  padding: 0.4rem;
  background: #F0F2F5;
  border: 0.2rem solid #E1E2E6;
  border-radius: 0.8rem;
}

.dropdown:focus-within .content {
  display: flex;
}

.dropdown .content button,
.dropdown .content .button {
  margin-top: 0px;
  text-wrap: nowrap;
  background-color: #F0F2F5;
  border-color: #F0F2F5;
  color: #7C49F2;
}

.dropdown .content button:hover,
.dropdown .content .button:hover,
.dropdown .content button:focus-visible,
.dropdown .content .button:focus-visible {
  background-color: #EBEDF0;
  border-color: #EBEDF0;
  color: #6639BF;
}

button.dropdown-toggle,
.button.dropdown-toggle,
button.icon-only-button,
.button.icon-only-button {
  background-color: transparent;
  border: none;
  color: #343a40;
}

button.dropdown-toggle:hover,
.button.dropdown-toggle:hover,
button.dropdown-toggle:focus-visible,
.button.dropdown-toggle:focus-visible,
button.icon-only-button:hover,
.button.icon-only-button:hover,
button.icon-only-button:focus-visible,
.button.icon-only-button:focus-visible {
  background-color: #EBEDF0;
  border: none;
  color: #6639BF;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

.center {
  text-align: center;
}

.flex {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.flex.row {
  flex-direction: row;
}

.flex.row.rev {
  flex-direction: row-reverse;
}

.flex.col {
  flex-direction: column;
}

.flex.col.rev {
  flex-direction: column-reverse;
}

.flex.nowrap,
.flex.no-wrap {
  flex-wrap: nowrap;
}

.flex.wrap {
  flex-wrap: wrap;
}

.flex.start {
  justify-content: flex-start;
}

.flex.end {
  justify-content: flex-end;
}

.flex.center {
  justify-content: center;
}

.flex.spaceBetween {
  justify-content: space-between;
}

.flex.alignStart {
  align-items: flex-start;
  align-content: flex-start;
}

.flex.alignEnd,
.flex.align-end {
  align-items: flex-end;
  align-content: flex-end;
}

.flex.alignCenter,
.flex.center-v {
  align-items: center;
  align-content: center;
}

.flex.center-h {
  justify-items: center;
  justify-content: center;
}

.flex.stretch {
  align-items: stretch;
  align-content: stretch;
}

.flex.alignSpaceBetween {
  align-items: space-between;
  align-content: space-between;
}

.flex.alignSpaceAround {
  align-items: space-around;
  align-content: space-around;
}

.justifyselfstretch {
  justify-self: stretch;
}

.justifyselfcenter {
  justify-self: center;
}

.justifyselfstart {
  justify-self: start;
}

.justifyselfend {
  justify-self: end;
}

.flex.compact-gap {
  gap: 0.2rem;
}

.grid {
  display: grid;
}

.grid.split {
  gap: 0px;
  grid-template-columns: 4fr 4fr;
  grid-template-rows: 1fr;
  grid-template-areas: "left right";
}

.grid.split > .left {
  grid-area: left;
  justify-self: right;
  padding-right: 2rem;
}

.grid.split > .right {
  grid-area: right;
  justify-self: left;
  padding-left: 2rem;
  border-left: 0.2rem solid #E1E2E6;
}

.grid.split.noBorder > .left,
.grid.split.noBorder > .right {
  border: none;
}

/* when mobile/smaller-window, resize */
@media only screen and (max-width: 800px) {
  .grid.split {
    grid-template-rows: auto auto;
    grid-template-columns: 1fr;
    grid-template-areas: "left" "right";
    padding: 0px 2rem;
  }
  .grid.split > .left,
  .grid.split > .right {
    justify-self: left;
    padding-left: 0px;
    padding-right: 0px;
    border: none;
  }
}
.grid.list {
  grid-template-columns: 1fr 1fr 1fr;
  gap: 1rem;
  margin-bottom: 2rem; /* temporary fix */
}

/*
when inside a grid split (the list will have less space),
and 
when on mobile/smaller-window,
make the list have only one column
*/
.grid.split .grid.list {
  /* for grid split */
  grid-template-columns: 1fr;
}

@media only screen and (max-width: 800px) {
  .grid.list {
    /* for mobile/smaller-window */
    grid-template-columns: 1fr;
  }
}
.grid.hero {
  grid-template-columns: 6fr 2fr 6fr;
  grid-template-rows: 1fr;
  grid-template-areas: "content . logo";
}

.grid.hero > .content {
  grid-area: content;
  justify-self: end;
  align-self: center;
  text-align: center;
}

.grid.hero > .logo {
  grid-area: logo;
  justify-self: start;
  align-self: center;
}

@media only screen and (max-width: 800px) {
  .grid.hero {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
    grid-template-areas: "logo" "content";
  }
  .grid.hero > .content,
  .grid.hero > .logo {
    justify-self: center;
  }
}
.grid.intro {
  grid-template-rows: auto auto;
  grid-template-columns: 1fr 1fr;
  gap: 4rem;
  grid-template-areas: "logotype actions" "content content";
  padding-top: 1rem;
  padding-left: 2rem;
  padding-right: 2rem;
  padding-bottom: 4rem;
  margin-top: 0px;
  margin-left: 1rem;
  margin-right: 1rem;
  margin-bottom: 4rem;
  border-bottom: 0.2rem solid #E1E2E6;
}

.grid.intro > .logotype {
  grid-area: logotype;
  display: flex;
  gap: 1rem;
  justify-items: start;
  justify-content: start;
  align-items: center;
}

.grid.intro > .logotype p {
  margin-bottom: 0px;
}

.grid.intro > .logotype > .logo {
  width: 4rem;
  height: 4rem;
}

.grid.intro > .content {
  grid-area: content;
  text-align: center;
}

@media only screen and (max-width: 800px) {
  .grid.intro {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}
.grid.page {
  grid-template-columns: 2fr 10fr 2fr;
  grid-template-rows: 1fr;
  grid-template-areas: ". content .";
}

.grid.page > .content {
  grid-area: content;
  justify-self: stretch;
  align-self: start;
}

@media only screen and (max-width: 800px) {
  .grid.page {
    grid-template-columns: 1fr 12fr 1fr;
  }
}
.grid.screen {
  height: 100%;
  margin: 0px 1rem;
}

.grid.screen > .content {
  justify-self: center;
  align-self: center;
  margin-top: 0px;
}

html.screen {
  height: 100%;
}

html.screen body {
  height: 100%;
  display: grid;
  grid-template-rows: auto 1fr;
}

header {
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr;
  grid-template-areas: "menu";
}

header > .menu {
  grid-area: menu;
  text-align: left;
  justify-self: left;
}

header > .options {
  grid-area: options;
  text-align: right;
  justify-self: right;
  padding: 1rem;
}

.nav > div {
  height: 100%;
  display: flex;
  align-items: center;
}

/*

* + *        for default,
* + element  for reversing margin-top: 0px;

*/
* + *,
* + p,
* + h1,
* + h2,
* + h3,
* + h4,
* + h5,
* + h6 {
  margin-top: 1rem;
}

.flex > *,
.grid > *,
header > *,
.radio > *,
.checkbox > *,
.caption > *,
.caption > div > *,
.nav > div,
.logotype > * {
  margin-top: 0px;
}

.grid.paragraph {
  gap: 1rem;
  grid-template-columns: 1fr 1fr;
  grid-template-areas: "content image";
}

.grid.paragraph.alt {
  grid-template-areas: "image content";
}

.grid.paragraph > .content {
  grid-area: content;
}

.grid.paragraph > .image {
  grid-area: image;
  display: flex;
  justify-items: center;
  align-items: center;
}

@media only screen and (max-width: 1000px) {
  .grid.paragraph,
  .grid.paragraph.alt {
    gap: 1rem;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr auto;
    grid-template-areas: "content" "image";
  }
}
a.mark {
  /*
  undo stuff in other stuff?
  */
  color: #7C49F2;
}

a.mark:hover,
a.mark:focus-visible {
  color: #6639BF;
}

/*
other utils
*/
span.ohno,
p.ohno,
b.ohno,
i.ohno,
u.ohno,
.text.ohno,
mark.ohno,
.mark.ohno,
code.ohno {
  color: #E64545;
}

span.yay,
p.yay,
b.yay,
i.yay,
u.yay,
.text.yay,
mark.yay,
.mark.yay,
code.yay {
  color: #00B377;
}

span.bg1,
p.bg1,
b.bg1,
i.bg1,
u.bg1,
.text.bg1,
mark.bg1,
.mark.bg1,
code.bg1 {
  color: #FBFCFC;
}

span.fg2,
p.fg2,
b.fg2,
i.fg2,
u.fg2,
.text.fg2,
mark.fg2,
.mark.fg2,
code.fg2 {
  color: #343a40;
}

span.fg1,
p.fg1,
b.fg1,
i.fg1,
u.fg1,
.text.fg1,
mark.fg1,
.mark.fg1,
code.fg1 {
  color: #343a40;
}

span.fg0,
p.fg0,
b.fg0,
i.fg0,
u.fg0,
.text.fg0,
mark.fg0,
.mark.fg0,
code.fg0 {
  color: #868e96;
}

span.main,
p.main,
b.main,
i.main,
u.main,
.text.main,
mark.main,
.mark.main,
code.main {
  color: #7C49F2;
}

span.extra,
p.extra,
b.extra,
i.extra,
u.extra,
.text.extra,
mark.extra,
.mark.extra,
code.extra {
  color: #00B377;
}

mark.markOhno,
.mark.markOhno {
  background-color: #E64545;
}

mark.markYay,
.mark.markYay {
  background-color: #00B377;
}

mark.markBg4,
.mark.markBg4 {
  background-color: #E1E2E6;
}

mark.markBg2,
.mark.markBg2 {
  background-color: #F0F2F5;
}

mark.markFg2,
.mark.markFg2 {
  background-color: #343a40;
}

mark.markFg1,
.mark.markFg1 {
  background-color: #343a40;
}

mark.markFg0,
.mark.markFg0 {
  background-color: #868e96;
}

mark.markMain,
.mark.markMain {
  background-color: #7C49F2;
}

mark.markExtra,
.mark.markExtra {
  background-color: #00B377;
}

.box.ohno {
  color: #E64545;
  border-color: #E64545;
}

.box.yay {
  color: #00B377;
  border-color: #00B377;
}

pre,
.pre {
  white-space: pre;
}

button.ohno,
.button.ohno {
  background-color: #E64545;
  border-color: #E64545;
}

button.yay,
.button.yay {
  background-color: #00B377;
  border-color: #00B377;
}

button.extra,
.button.extra {
  background-color: #00B377;
  border-color: #00B377;
  color: #F0F2F5;
}

button.alt.ohno,
.button.alt.ohno {
  background-color: #EBEDF0;
  border-color: #EBEDF0;
  color: #E64545;
}

button.alt.yay,
.button.alt.yay {
  background-color: #EBEDF0;
  border-color: #EBEDF0;
  color: #00B377;
}

button.alt.extra,
.button.alt.extra {
  background-color: #EBEDF0;
  border-color: #EBEDF0;
  color: #00B377;
}

button:hover.ohno,
button:focus-visible.ohno,
.button:hover.ohno,
.button:focus-visible.ohno {
  background-color: #B33636;
  color: #FBFCFC;
}

button:hover.yay,
button:focus-visible.yay,
.button:hover.yay,
.button:focus-visible.yay {
  background-color: #008055;
  color: #FBFCFC;
}

button:hover.extra,
button:focus-visible.extra,
.button:hover.extra,
.button:focus-visible.extra {
  background-color: #008055;
  color: #F0F2F5;
}

button:focus-visible.ohno,
.button:focus-visible.ohno {
  outline-color: #E64545;
}

button:focus-visible.yay,
.button:focus-visible.yay {
  outline-color: #00B377;
}

button:focus-visible.extra,
.button:focus-visible.extra {
  outline-color: #00B377;
}

input[type=text].ohno:hover,
input[type=password].ohno:hover,
textarea.ohno:hover {
  border-color: #B33636;
}

input[type=text].yay:hover,
input[type=password].yay:hover,
textarea.yay:hover {
  border-color: #008055;
}

input[type=text].extra:hover,
input[type=password].extra:hover,
textarea.extra:hover {
  border-color: #008055;
}

input[type=text].ohno:focus,
input[type=password].ohno:focus,
textarea.ohno:focus,
input[type=text].ohno:focus-visible,
input[type=password].ohno:focus-visible,
textarea.ohno:focus-visible {
  border-color: #E64545;
}

input[type=text].yay:focus,
input[type=password].yay:focus,
textarea.yay:focus,
input[type=text].yay:focus-visible,
input[type=password].yay:focus-visible,
textarea.yay:focus-visible {
  border-color: #00B377;
}

input[type=text].extra:focus,
input[type=password].extra:focus,
textarea.extra:focus,
input[type=text].extra:focus-visible,
input[type=password].extra:focus-visible,
textarea.extra:focus-visible {
  border-color: #00B377;
}

textarea.vertical {
  resize: vertical;
  white-space: pre;
}

textarea.horizontal {
  resize: horizontal;
  white-space: pre;
}

.hide {
  display: none;
}

.fullscreen {
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  z-index: 200;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0px;
  background: #FBFCFC;
}

.exitFullscreen {
  position: fixed;
  top: 1rem;
  left: 1rem;
  margin: 0px;
  /* hide exit button by default */
  display: none;
}

.fullscreen > button.exitFullscreen,
.fullscreen > .button.exitFullscreen {
  /* show exit button if its parent is fullscreen */
  display: inline-block;
  /* and specifically use inline block just for buttons */
}

.invisible {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: 0px;
  opacity: 0;
  overflow: hidden;
}

/* fancy stuff */
.hero > .logo::before {
  content: "";
  position: absolute;
  width: 200px;
  height: 200px;
  z-index: -100;
  background-color: #7C49F2;
  opacity: 0.2;
  filter: blur(1rem);
  border-radius: 50%;
}

html.min .hero > .logo::before {
  display: none;
}

.hero > .logo > svg {
  margin-top: 0px;
}

/* temp */
.fullWidth {
  width: 100%;
}

.grid.page.extra {
  margin-top: 0px;
  margin-bottom: 0px;
  padding-bottom: 1rem;
  background-color: #F0F2F5;
}

button.large,
.button.large {
  padding: 0.6rem 1.2rem;
  font-size: 1.2rem;
  line-height: 1.6rem;
}

.fill-ohno {
  fill: #E64545;
}

.fill-ohno-alt {
  fill: #B33636;
}

.fill-yay {
  fill: #00B377;
}

.fill-yay-alt {
  fill: #008055;
}

.fill-main {
  fill: #7C49F2;
}

.fill-main-alt {
  fill: #6639BF;
}

.fill-extra {
  fill: #00B377;
}

.fill-extra-alt {
  fill: #008055;
}

.fill-extra-bg {
  fill: #F0F2F5;
}

.fill-fg2 {
  fill: #343a40;
}

.fill-fg1 {
  fill: #343a40;
}

.fill-fg0 {
  fill: #868e96;
}

.fill-bg4 {
  fill: #E1E2E6;
}

.fill-bg3 {
  fill: #EBEDF0;
}

.fill-bg2 {
  fill: #F0F2F5;
}

.fill-bg1 {
  fill: #FBFCFC;
}

.fill-bg0 {
  fill: #F0F2F5;
}

.background-extra-bg {
  background-color: #F0F2F5;
}

.background-bg2 {
  background-color: #F0F2F5;
}

.background-bg1 {
  background-color: #FBFCFC;
}

.background-bg0 {
  background-color: #F0F2F5;
}

.dropdown .content button.ohno,
.dropdown .content .button.ohno {
  background-color: #F0F2F5;
  border-color: #F0F2F5;
  color: #E64545;
}

.dropdown .content button.yay,
.dropdown .content .button.yay {
  background-color: #F0F2F5;
  border-color: #F0F2F5;
  color: #00B377;
}

.dropdown .content button.ohno:hover,
.dropdown .content .button.ohno:hover,
.dropdown .content button.ohno:focus-visible,
.dropdown .content .button.ohno:focus-visible {
  background-color: #EBEDF0;
  border-color: #EBEDF0;
  color: #B33636;
}

.dropdown .content button.yay:hover,
.dropdown .content .button.yay:hover,
.dropdown .content button.yay:focus-visible,
.dropdown .content .button.yay:focus-visible {
  background-color: #EBEDF0;
  border-color: #EBEDF0;
  color: #008055;
}

button.dropdown-toggle.ohno,
.button.dropdown-toggle.ohno,
button.icon-only-button.ohno,
.button.icon-only-button.ohno {
  background-color: transparent;
  border: none;
  color: #E64545;
}

button.dropdown-toggle.ohno:hover,
.button.dropdown-toggle.ohno:hover,
button.dropdown-toggle.ohno:focus-visible,
.button.dropdown-toggle.ohno:focus-visible,
button.icon-only-button.ohno:hover,
.button.icon-only-button.ohno:hover,
button.icon-only-button.ohno:focus-visible,
.button.icon-only-button.ohno:focus-visible {
  background-color: #EBEDF0;
  border: none;
  color: #B33636;
}

button.dropdown-toggle.yay,
.button.dropdown-toggle.yay,
button.icon-only-button.yay,
.button.icon-only-button.yay {
  background-color: transparent;
  border: none;
  color: #00B377;
}

button.dropdown-toggle.yay:hover,
.button.dropdown-toggle.yay:hover,
button.dropdown-toggle.yay:focus-visible,
.button.dropdown-toggle.yay:focus-visible,
button.icon-only-button.yay:hover,
.button.icon-only-button.yay:hover,
button.icon-only-button.yay:focus-visible,
.button.icon-only-button.yay:focus-visible {
  background-color: #EBEDF0;
  border: none;
  color: #008055;
}

@media (prefers-reduced-motion) {
  html {
    scroll-behavior: auto;
  }
  a,
  .a,
  button,
  .button,
  input[type=text],
  input[type=password],
  textarea,
  input[type=radio],
  input[type=checkbox] {
    transition-duration: 0s;
  }
  .card,
  .card.double {
    perspective: none;
  }
  .card.double > .content {
    display: block;
    transition-duration: 0s;
    transform-style: flat;
    background-color: inherit;
    border-radius: 0px;
    align-items: normal;
    justify-content: normal;
    text-align: center;
  }
  .card.double > .content > .front,
  .card.double > .content > .back {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: #F0F2F5;
    border-radius: 0.8rem;
    align-items: center;
    justify-content: center;
    text-align: center;
    backface-visibility: visible;
    -webkit-backface-visibility: visible;
    -moz-backface-visibility: visible;
    transform: none;
  }
  .card.double > .content > .back {
    display: none;
    transform: none;
  }
  .card.double > .content > .front {
    display: flex;
  }
  .card.double.flip > .content {
    transform: none;
  }
  .card.double.flip > .content > .back {
    display: flex;
  }
  .card.double.flip > .content > .front {
    display: none;
  }
}

@media (prefers-color-scheme: dark) {
/*!
  EhUI is free and open source
  Copyright (c) Ehan Ahamed and contributors
  https://ehan.dev/ehui/LICENSE.txt
*/
:root {
  color-scheme: dark;
}

html {
  height: auto;
  font-size: 18px;
  scroll-behavior: smooth;
}

@media only screen and (max-width: 800px) {
  html {
    font-size: 16px;
  }
}
body {
  height: auto;
  background-color: #20202E;
  color: #c3cce9;
  font-size: 1rem;
  line-height: 1.4;
  font-family: "nunito", sans-serif;
  font-weight: normal;
  margin: 0px;
}

::selection {
  background-color: #533380;
  color: #c3cce9;
}

h1,
.h1 {
  font-size: 3.4rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h2,
.h2 {
  font-size: 2.8rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h3,
.h3 {
  font-size: 2.2rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h4,
.h4 {
  font-size: 1.6rem;
  font-weight: bold;
  margin-bottom: 1rem;
  margin-top: 0px;
}

h1, h2, h3, h4,
.h1, .h2, .h3, .h4 {
  line-height: 1.2;
}

h5,
.h5,
p {
  font-size: 1rem;
  font-weight: normal;
  margin-top: 0px;
  margin-bottom: 1rem;
}

/* TEMPORARY FIX */
p {
  margin-block-end: 0px;
}

h6,
.h6,
small {
  font-size: 0.8rem;
  font-weight: normal;
  margin-bottom: 1rem;
}

h5, p, h6, small,
.h5, .h6 {
  line-height: 1.4;
}

b,
.b {
  font-weight: bold;
}

i,
.i {
  font-style: italic;
}

/*
nerdfont icons shouldn't have same styling as italic element lol
*/
i.nf {
  font-style: normal;
}

s,
.s {
  text-decoration: line-through;
}

mark,
.mark {
  background-color: #c3cce9;
  color: #20202E;
  border-radius: 0.4rem;
  padding: 0.2rem 0.4rem;
  font-size: 1rem;
  line-height: 1.4;
}

code,
.code {
  font-family: monospace;
  background-color: #242433;
  border-radius: 0.4rem;
  padding: 0.2rem 0.4rem;
  font-size: 1rem;
  line-height: 1.4;
}

.box {
  background-color: #242433;
  color: #c3cce9;
  border: 0.2rem solid #242433;
  border-radius: 0.8rem;
  padding: 1rem;
}

.hero {
  border-bottom: 0.2rem solid #2E2E42;
  text-align: center;
  padding: 1rem;
  padding-bottom: 4rem;
  margin: 4rem 1rem;
}

.topmost {
  /* "topmost" is those alert bar thingies that are ABOVE the header, they're the top-most */
  margin: 1rem;
}

header,
.header {
  position: static;
  /* TEMP*/
  height: 4rem;
  background-color: #20202E;
  border-bottom: 0.2rem solid #2E2E42;
  padding: 0px;
  margin-top: 0px;
  margin-left: 0px;
  margin-right: 0px;
  margin-bottom: 1rem;
}

header.sticky,
.header.sticky {
  position: sticky;
  z-index: 100;
  top: 0px;
  margin-top: 0px;
  margin-left: 0px;
  margin-right: 0px;
  margin-bottom: 0px;
}

header > .nav {
  display: flex;
  gap: 1rem;
  align-items: center;
  margin: 0px 1rem;
}

.nav > div {
  border-bottom: 0.2rem solid #20202E;
}

.nav > div.current {
  border-bottom: 0.2rem solid #B899FF;
}

.nav > div.current > a {
  color: #B899FF;
}

footer,
.footer {
  border-top: 0.2rem solid #2E2E42;
  text-align: center;
  padding: 1rem;
  padding-top: 4rem;
  margin: 4rem 1rem;
}

table {
  border-collapse: separate;
  border-spacing: 0px;
  border-radius: 0.8rem;
  border: 0.2rem solid #2E2E42;
}

td {
  font-weight: normal;
  text-align: left;
  padding: 1rem;
}

th {
  font-weight: bold;
  text-align: left;
  padding: 1rem;
}

table.outer td,
table.outer th,
table.outer thead,
table.outer tbody,
table.outer tfoot {
  border: none;
}

table.inner th:not(:last-child),
table.inner td:not(:last-child) {
  border-right: 0.2rem solid #2E2E42;
}

table.inner > thead > tr > th,
table.inner > thead > tr > td,
table.inner > tbody > tr:not(:last-child) > th,
table.inner > tbody > tr:not(:last-child) > td,
table.inner > tr:not(:last-child) > td,
table.inner > tr:not(:last-child) > th,
table.inner > thead:not(:last-child),
table.inner > tbody:not(:last-child) {
  border-bottom: 0.2rem solid #2E2E42;
}

a,
.a {
  color: #9466FF;
  cursor: pointer;
  border-radius: 0.4rem;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  text-decoration: none;
  transition-duration: 0.4s;
}

a:hover,
a:focus-visible,
.a:hover,
.a:focus-visible {
  color: #B899FF;
}

a:focus-visible,
.a:focus-visible {
  outline: 0.2rem solid #9466FF;
  outline-offset: 0.4rem;
  transition-duration: 0.1s;
}

button,
.button {
  display: inline-block;
  appearance: none;
  align-items: flex-start;
  box-sizing: border-box;
  text-align: center;
  cursor: pointer;
  text-decoration: none;
  background-color: #9466FF;
  color: #20202E;
  border: 0.2rem solid #9466FF;
  border-radius: 2rem;
  padding: 0.4rem 0.8rem;
  font-family: "nunito", sans-serif;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.4;
  transition-duration: 0.4s;
}

button.alt,
.button.alt {
  background-color: #2B2B3D;
  color: #9466FF;
  border-color: #2B2B3D;
}

button:hover,
button:focus-visible,
.button:hover,
.button:focus-visible {
  background-color: #B899FF;
  color: #20202E;
}

button:focus-visible,
.button:focus-visible {
  outline: 0.2rem solid #9466FF;
  outline-offset: 0.2rem;
  transition-duration: 0.1s;
}

::placeholder {
  color: #9399b2;
  font-size: 1rem;
  font-family: "nunito", sans-serif;
  font-weight: normal;
  opacity: 1;
}

input[type=text],
input[type=password],
textarea {
  display: inline-block;
  appearance: none;
  align-items: flex-start;
  box-sizing: border-box;
  text-align: left;
  cursor: text;
  text-decoration: none;
  font-family: "nunito", sans-serif;
  background-color: #20202E;
  color: #c3cce9;
  border: 0.2rem solid #2E2E42;
  border-radius: 0.8rem;
  outline: none;
  padding: 0.4rem 0.8rem;
  font-size: 1rem;
  line-height: 1.4;
  transition-duration: 0.4s;
}

input[type=text]:hover,
input[type=password]:hover,
textarea:hover {
  border-color: #B899FF;
}

input[type=text]:focus,
input[type=password]:focus,
textarea:focus,
input[type=text]:focus-visible,
input[type=password]:focus-visible,
textarea:focus-visible {
  border-color: #9466FF;
}

/*
the html of a radio should look like:

<div class="radio>
  <input type="radio" id="id" ... />
  <label for="id">text</label>
</div>
*/
.radio,
.checkbox {
  display: grid;
  grid-template-columns: 1.8rem auto 1fr;
  grid-template-areas: "input label .";
  gap: 1em;
}

.radio input,
.checkbox input {
  grid-area: input;
}

.radio label,
.checkbox label {
  grid-area: label;
}

input[type=radio],
input[type=checkbox] {
  /*
  https://moderncss.dev/pure-css-custom-styled-radio-buttons/
  https://moderncss.dev/pure-css-custom-checkbox-style/
  */
  appearance: none;
  width: 1.8rem;
  height: 1.8rem;
  margin: 0px;
  background-color: #20202E;
  border: 0.2rem solid #9466FF;
  transition-duration: 0.4s;
}

input[type=radio] {
  border-radius: 50%;
}

input[type=checkbox] {
  border-radius: 0.6rem;
}

input[type=radio]:hover,
input[type=radio]:focus-visible,
input[type=checkbox]:hover,
input[type=checkbox]:focus-visible {
  border-color: #B899FF;
}

input[type=radio]:focus-visible,
input[type=checkbox]:focus-visible {
  outline: 0.2rem solid #9466FF;
  outline-offset: 0.2rem;
  transition-duration: 0.1s;
}

input[type=radio]:checked,
input[type=checkbox]:checked {
  background-color: #9466FF;
  transition-duration: 0.1s;
}

.card {
  width: 40rem;
  height: 20rem;
}

.caption {
  width: 40rem;
  display: grid;
  gap: 1rem;
  grid-template-rows: 1fr;
}

.caption.centerThree {
  grid-template-columns: 1fr 4fr 1fr;
}

.caption.evenTwo {
  grid-template-columns: 1fr 1fr;
}

.caption.evenThree {
  grid-template-columns: 1fr 1fr 1fr;
}

@media only screen and (max-width: 800px) {
  .card,
  .caption {
    width: 100%;
  }
}
.card > .content {
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  background-color: #242433;
  border-radius: 0.8rem;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.card.double {
  perspective: 1000px;
}

.card.double > .content {
  display: block;
  transition: transform 0.4s;
  transform-style: preserve-3d;
  background-color: inherit;
  border-radius: 0px;
  align-items: normal;
  justify-content: normal;
  text-align: center;
}

.card.double > .content > .front,
.card.double > .content > .back {
  display: flex;
  position: absolute;
  width: 100%;
  height: 100%;
  margin-top: 0px;
  background-color: #242433;
  border-radius: 0.8rem;
  align-items: center;
  justify-content: center;
  text-align: center;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  transform: rotateX(0deg);
  box-shadow: 0px 4px 10px 2px rgba(0, 0, 0, 0.1);
}

.card.double > .content > .back {
  transform: rotateY(180deg);
}

.card.double.flip > .content {
  transform: rotateY(180deg);
}

.separator {
  display: flex;
  justify-content: center;
  align-items: center;
  color: #9399b2;
}

.separator::before,
.separator::after {
  content: "";
  display: block;
  background: #2E2E42;
  width: 100%;
  height: 0.2rem;
  margin: 0px 1rem;
}

.modal {
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 200;
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
}

.modal::before {
  content: "";
  position: fixed;
  z-index: 180;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  background-color: #1B1B26;
  opacity: 0.6;
}

.modal > .content {
  z-index: 200;
  width: 60vw;
  background-color: #20202E;
  border: 0.2rem solid #2E2E42;
  border-radius: 0.8rem;
  padding: 1rem;
}

@media only screen and (max-width: 800px) {
  .modal {
    align-items: flex-end;
  }
  .modal > .content {
    width: 100vw;
    border: none;
    border-top: 0.2rem solid #2E2E42;
    border-radius: 0px;
    padding-bottom: 8rem;
  }
}
.flex.pop {
  padding: 0px 1rem;
}

/* .dropdown html structure:
<div class="dropdown">
  <button>Toggle Dropdown!</button>
  <div class="content">
    <button>Something</button>
    <button>Another thing</button>
    <button>More things</button>
  </div>
</div>
*/
.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown .content {
  display: none;
  position: absolute;
  z-index: 1;
  flex-direction: column;
  align-items: stretch;
  gap: 0.4rem;
  margin-top: 0.4rem;
  padding: 0.4rem;
  background: #242433;
  border: 0.2rem solid #2E2E42;
  border-radius: 0.8rem;
}

.dropdown:focus-within .content {
  display: flex;
}

.dropdown .content button,
.dropdown .content .button {
  margin-top: 0px;
  text-wrap: nowrap;
  background-color: #242433;
  border-color: #242433;
  color: #9466FF;
}

.dropdown .content button:hover,
.dropdown .content .button:hover,
.dropdown .content button:focus-visible,
.dropdown .content .button:focus-visible {
  background-color: #2B2B3D;
  border-color: #2B2B3D;
  color: #B899FF;
}

button.dropdown-toggle,
.button.dropdown-toggle,
button.icon-only-button,
.button.icon-only-button {
  background-color: transparent;
  border: none;
  color: #c3cce9;
}

button.dropdown-toggle:hover,
.button.dropdown-toggle:hover,
button.dropdown-toggle:focus-visible,
.button.dropdown-toggle:focus-visible,
button.icon-only-button:hover,
.button.icon-only-button:hover,
button.icon-only-button:focus-visible,
.button.icon-only-button:focus-visible {
  background-color: #2B2B3D;
  border: none;
  color: #B899FF;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

.center {
  text-align: center;
}

.flex {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.flex.row {
  flex-direction: row;
}

.flex.row.rev {
  flex-direction: row-reverse;
}

.flex.col {
  flex-direction: column;
}

.flex.col.rev {
  flex-direction: column-reverse;
}

.flex.nowrap,
.flex.no-wrap {
  flex-wrap: nowrap;
}

.flex.wrap {
  flex-wrap: wrap;
}

.flex.start {
  justify-content: flex-start;
}

.flex.end {
  justify-content: flex-end;
}

.flex.center {
  justify-content: center;
}

.flex.spaceBetween {
  justify-content: space-between;
}

.flex.alignStart {
  align-items: flex-start;
  align-content: flex-start;
}

.flex.alignEnd,
.flex.align-end {
  align-items: flex-end;
  align-content: flex-end;
}

.flex.alignCenter,
.flex.center-v {
  align-items: center;
  align-content: center;
}

.flex.center-h {
  justify-items: center;
  justify-content: center;
}

.flex.stretch {
  align-items: stretch;
  align-content: stretch;
}

.flex.alignSpaceBetween {
  align-items: space-between;
  align-content: space-between;
}

.flex.alignSpaceAround {
  align-items: space-around;
  align-content: space-around;
}

.justifyselfstretch {
  justify-self: stretch;
}

.justifyselfcenter {
  justify-self: center;
}

.justifyselfstart {
  justify-self: start;
}

.justifyselfend {
  justify-self: end;
}

.flex.compact-gap {
  gap: 0.2rem;
}

.grid {
  display: grid;
}

.grid.split {
  gap: 0px;
  grid-template-columns: 4fr 4fr;
  grid-template-rows: 1fr;
  grid-template-areas: "left right";
}

.grid.split > .left {
  grid-area: left;
  justify-self: right;
  padding-right: 2rem;
}

.grid.split > .right {
  grid-area: right;
  justify-self: left;
  padding-left: 2rem;
  border-left: 0.2rem solid #2E2E42;
}

.grid.split.noBorder > .left,
.grid.split.noBorder > .right {
  border: none;
}

/* when mobile/smaller-window, resize */
@media only screen and (max-width: 800px) {
  .grid.split {
    grid-template-rows: auto auto;
    grid-template-columns: 1fr;
    grid-template-areas: "left" "right";
    padding: 0px 2rem;
  }
  .grid.split > .left,
  .grid.split > .right {
    justify-self: left;
    padding-left: 0px;
    padding-right: 0px;
    border: none;
  }
}
.grid.list {
  grid-template-columns: 1fr 1fr 1fr;
  gap: 1rem;
  margin-bottom: 2rem; /* temporary fix */
}

/*
when inside a grid split (the list will have less space),
and 
when on mobile/smaller-window,
make the list have only one column
*/
.grid.split .grid.list {
  /* for grid split */
  grid-template-columns: 1fr;
}

@media only screen and (max-width: 800px) {
  .grid.list {
    /* for mobile/smaller-window */
    grid-template-columns: 1fr;
  }
}
.grid.hero {
  grid-template-columns: 6fr 2fr 6fr;
  grid-template-rows: 1fr;
  grid-template-areas: "content . logo";
}

.grid.hero > .content {
  grid-area: content;
  justify-self: end;
  align-self: center;
  text-align: center;
}

.grid.hero > .logo {
  grid-area: logo;
  justify-self: start;
  align-self: center;
}

@media only screen and (max-width: 800px) {
  .grid.hero {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
    grid-template-areas: "logo" "content";
  }
  .grid.hero > .content,
  .grid.hero > .logo {
    justify-self: center;
  }
}
.grid.intro {
  grid-template-rows: auto auto;
  grid-template-columns: 1fr 1fr;
  gap: 4rem;
  grid-template-areas: "logotype actions" "content content";
  padding-top: 1rem;
  padding-left: 2rem;
  padding-right: 2rem;
  padding-bottom: 4rem;
  margin-top: 0px;
  margin-left: 1rem;
  margin-right: 1rem;
  margin-bottom: 4rem;
  border-bottom: 0.2rem solid #2E2E42;
}

.grid.intro > .logotype {
  grid-area: logotype;
  display: flex;
  gap: 1rem;
  justify-items: start;
  justify-content: start;
  align-items: center;
}

.grid.intro > .logotype p {
  margin-bottom: 0px;
}

.grid.intro > .logotype > .logo {
  width: 4rem;
  height: 4rem;
}

.grid.intro > .content {
  grid-area: content;
  text-align: center;
}

@media only screen and (max-width: 800px) {
  .grid.intro {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}
.grid.page {
  grid-template-columns: 2fr 10fr 2fr;
  grid-template-rows: 1fr;
  grid-template-areas: ". content .";
}

.grid.page > .content {
  grid-area: content;
  justify-self: stretch;
  align-self: start;
}

@media only screen and (max-width: 800px) {
  .grid.page {
    grid-template-columns: 1fr 12fr 1fr;
  }
}
.grid.screen {
  height: 100%;
  margin: 0px 1rem;
}

.grid.screen > .content {
  justify-self: center;
  align-self: center;
  margin-top: 0px;
}

html.screen {
  height: 100%;
}

html.screen body {
  height: 100%;
  display: grid;
  grid-template-rows: auto 1fr;
}

header {
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr;
  grid-template-areas: "menu";
}

header > .menu {
  grid-area: menu;
  text-align: left;
  justify-self: left;
}

header > .options {
  grid-area: options;
  text-align: right;
  justify-self: right;
  padding: 1rem;
}

.nav > div {
  height: 100%;
  display: flex;
  align-items: center;
}

/*

* + *        for default,
* + element  for reversing margin-top: 0px;

*/
* + *,
* + p,
* + h1,
* + h2,
* + h3,
* + h4,
* + h5,
* + h6 {
  margin-top: 1rem;
}

.flex > *,
.grid > *,
header > *,
.radio > *,
.checkbox > *,
.caption > *,
.caption > div > *,
.nav > div,
.logotype > * {
  margin-top: 0px;
}

.grid.paragraph {
  gap: 1rem;
  grid-template-columns: 1fr 1fr;
  grid-template-areas: "content image";
}

.grid.paragraph.alt {
  grid-template-areas: "image content";
}

.grid.paragraph > .content {
  grid-area: content;
}

.grid.paragraph > .image {
  grid-area: image;
  display: flex;
  justify-items: center;
  align-items: center;
}

@media only screen and (max-width: 1000px) {
  .grid.paragraph,
  .grid.paragraph.alt {
    gap: 1rem;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr auto;
    grid-template-areas: "content" "image";
  }
}
a.mark {
  /*
  undo stuff in other stuff?
  */
  color: #9466FF;
}

a.mark:hover,
a.mark:focus-visible {
  color: #B899FF;
}

/*
other utils
*/
span.ohno,
p.ohno,
b.ohno,
i.ohno,
u.ohno,
.text.ohno,
mark.ohno,
.mark.ohno,
code.ohno {
  color: #ff6666;
}

span.yay,
p.yay,
b.yay,
i.yay,
u.yay,
.text.yay,
mark.yay,
.mark.yay,
code.yay {
  color: #66FFCC;
}

span.bg1,
p.bg1,
b.bg1,
i.bg1,
u.bg1,
.text.bg1,
mark.bg1,
.mark.bg1,
code.bg1 {
  color: #20202E;
}

span.fg2,
p.fg2,
b.fg2,
i.fg2,
u.fg2,
.text.fg2,
mark.fg2,
.mark.fg2,
code.fg2 {
  color: #c3cce9;
}

span.fg1,
p.fg1,
b.fg1,
i.fg1,
u.fg1,
.text.fg1,
mark.fg1,
.mark.fg1,
code.fg1 {
  color: #c3cce9;
}

span.fg0,
p.fg0,
b.fg0,
i.fg0,
u.fg0,
.text.fg0,
mark.fg0,
.mark.fg0,
code.fg0 {
  color: #9399b2;
}

span.main,
p.main,
b.main,
i.main,
u.main,
.text.main,
mark.main,
.mark.main,
code.main {
  color: #9466FF;
}

span.extra,
p.extra,
b.extra,
i.extra,
u.extra,
.text.extra,
mark.extra,
.mark.extra,
code.extra {
  color: #66FFCC;
}

mark.markOhno,
.mark.markOhno {
  background-color: #ff6666;
}

mark.markYay,
.mark.markYay {
  background-color: #66FFCC;
}

mark.markBg4,
.mark.markBg4 {
  background-color: #2E2E42;
}

mark.markBg2,
.mark.markBg2 {
  background-color: #242433;
}

mark.markFg2,
.mark.markFg2 {
  background-color: #c3cce9;
}

mark.markFg1,
.mark.markFg1 {
  background-color: #c3cce9;
}

mark.markFg0,
.mark.markFg0 {
  background-color: #9399b2;
}

mark.markMain,
.mark.markMain {
  background-color: #9466FF;
}

mark.markExtra,
.mark.markExtra {
  background-color: #66FFCC;
}

.box.ohno {
  color: #ff6666;
  border-color: #ff6666;
}

.box.yay {
  color: #66FFCC;
  border-color: #66FFCC;
}

pre,
.pre {
  white-space: pre;
}

button.ohno,
.button.ohno {
  background-color: #ff6666;
  border-color: #ff6666;
}

button.yay,
.button.yay {
  background-color: #66FFCC;
  border-color: #66FFCC;
}

button.extra,
.button.extra {
  background-color: #66FFCC;
  border-color: #66FFCC;
  color: #1B1B26;
}

button.alt.ohno,
.button.alt.ohno {
  background-color: #2B2B3D;
  border-color: #2B2B3D;
  color: #ff6666;
}

button.alt.yay,
.button.alt.yay {
  background-color: #2B2B3D;
  border-color: #2B2B3D;
  color: #66FFCC;
}

button.alt.extra,
.button.alt.extra {
  background-color: #2B2B3D;
  border-color: #2B2B3D;
  color: #66FFCC;
}

button:hover.ohno,
button:focus-visible.ohno,
.button:hover.ohno,
.button:focus-visible.ohno {
  background-color: #ff9999;
  color: #20202E;
}

button:hover.yay,
button:focus-visible.yay,
.button:hover.yay,
.button:focus-visible.yay {
  background-color: #CCFFEE;
  color: #20202E;
}

button:hover.extra,
button:focus-visible.extra,
.button:hover.extra,
.button:focus-visible.extra {
  background-color: #CCFFEE;
  color: #1B1B26;
}

button:focus-visible.ohno,
.button:focus-visible.ohno {
  outline-color: #ff6666;
}

button:focus-visible.yay,
.button:focus-visible.yay {
  outline-color: #66FFCC;
}

button:focus-visible.extra,
.button:focus-visible.extra {
  outline-color: #66FFCC;
}

input[type=text].ohno:hover,
input[type=password].ohno:hover,
textarea.ohno:hover {
  border-color: #ff9999;
}

input[type=text].yay:hover,
input[type=password].yay:hover,
textarea.yay:hover {
  border-color: #CCFFEE;
}

input[type=text].extra:hover,
input[type=password].extra:hover,
textarea.extra:hover {
  border-color: #CCFFEE;
}

input[type=text].ohno:focus,
input[type=password].ohno:focus,
textarea.ohno:focus,
input[type=text].ohno:focus-visible,
input[type=password].ohno:focus-visible,
textarea.ohno:focus-visible {
  border-color: #ff6666;
}

input[type=text].yay:focus,
input[type=password].yay:focus,
textarea.yay:focus,
input[type=text].yay:focus-visible,
input[type=password].yay:focus-visible,
textarea.yay:focus-visible {
  border-color: #66FFCC;
}

input[type=text].extra:focus,
input[type=password].extra:focus,
textarea.extra:focus,
input[type=text].extra:focus-visible,
input[type=password].extra:focus-visible,
textarea.extra:focus-visible {
  border-color: #66FFCC;
}

textarea.vertical {
  resize: vertical;
  white-space: pre;
}

textarea.horizontal {
  resize: horizontal;
  white-space: pre;
}

.hide {
  display: none;
}

.fullscreen {
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  z-index: 200;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0px;
  background: #20202E;
}

.exitFullscreen {
  position: fixed;
  top: 1rem;
  left: 1rem;
  margin: 0px;
  /* hide exit button by default */
  display: none;
}

.fullscreen > button.exitFullscreen,
.fullscreen > .button.exitFullscreen {
  /* show exit button if its parent is fullscreen */
  display: inline-block;
  /* and specifically use inline block just for buttons */
}

.invisible {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: 0px;
  opacity: 0;
  overflow: hidden;
}

/* fancy stuff */
.hero > .logo::before {
  content: "";
  position: absolute;
  width: 200px;
  height: 200px;
  z-index: -100;
  background-color: #9466FF;
  opacity: 0.2;
  filter: blur(1rem);
  border-radius: 50%;
}

html.min .hero > .logo::before {
  display: none;
}

.hero > .logo > svg {
  margin-top: 0px;
}

/* temp */
.fullWidth {
  width: 100%;
}

.grid.page.extra {
  margin-top: 0px;
  margin-bottom: 0px;
  padding-bottom: 1rem;
  background-color: #1B1B26;
}

button.large,
.button.large {
  padding: 0.6rem 1.2rem;
  font-size: 1.2rem;
  line-height: 1.6rem;
}

.fill-ohno {
  fill: #ff6666;
}

.fill-ohno-alt {
  fill: #ff9999;
}

.fill-yay {
  fill: #66FFCC;
}

.fill-yay-alt {
  fill: #CCFFEE;
}

.fill-main {
  fill: #9466FF;
}

.fill-main-alt {
  fill: #B899FF;
}

.fill-extra {
  fill: #66FFCC;
}

.fill-extra-alt {
  fill: #CCFFEE;
}

.fill-extra-bg {
  fill: #1B1B26;
}

.fill-fg2 {
  fill: #c3cce9;
}

.fill-fg1 {
  fill: #c3cce9;
}

.fill-fg0 {
  fill: #9399b2;
}

.fill-bg4 {
  fill: #2E2E42;
}

.fill-bg3 {
  fill: #2B2B3D;
}

.fill-bg2 {
  fill: #242433;
}

.fill-bg1 {
  fill: #20202E;
}

.fill-bg0 {
  fill: #1B1B26;
}

.background-extra-bg {
  background-color: #1B1B26;
}

.background-bg2 {
  background-color: #242433;
}

.background-bg1 {
  background-color: #20202E;
}

.background-bg0 {
  background-color: #1B1B26;
}

.dropdown .content button.ohno,
.dropdown .content .button.ohno {
  background-color: #242433;
  border-color: #242433;
  color: #ff6666;
}

.dropdown .content button.yay,
.dropdown .content .button.yay {
  background-color: #242433;
  border-color: #242433;
  color: #66FFCC;
}

.dropdown .content button.ohno:hover,
.dropdown .content .button.ohno:hover,
.dropdown .content button.ohno:focus-visible,
.dropdown .content .button.ohno:focus-visible {
  background-color: #2B2B3D;
  border-color: #2B2B3D;
  color: #ff9999;
}

.dropdown .content button.yay:hover,
.dropdown .content .button.yay:hover,
.dropdown .content button.yay:focus-visible,
.dropdown .content .button.yay:focus-visible {
  background-color: #2B2B3D;
  border-color: #2B2B3D;
  color: #CCFFEE;
}

button.dropdown-toggle.ohno,
.button.dropdown-toggle.ohno,
button.icon-only-button.ohno,
.button.icon-only-button.ohno {
  background-color: transparent;
  border: none;
  color: #ff6666;
}

button.dropdown-toggle.ohno:hover,
.button.dropdown-toggle.ohno:hover,
button.dropdown-toggle.ohno:focus-visible,
.button.dropdown-toggle.ohno:focus-visible,
button.icon-only-button.ohno:hover,
.button.icon-only-button.ohno:hover,
button.icon-only-button.ohno:focus-visible,
.button.icon-only-button.ohno:focus-visible {
  background-color: #2B2B3D;
  border: none;
  color: #ff9999;
}

button.dropdown-toggle.yay,
.button.dropdown-toggle.yay,
button.icon-only-button.yay,
.button.icon-only-button.yay {
  background-color: transparent;
  border: none;
  color: #66FFCC;
}

button.dropdown-toggle.yay:hover,
.button.dropdown-toggle.yay:hover,
button.dropdown-toggle.yay:focus-visible,
.button.dropdown-toggle.yay:focus-visible,
button.icon-only-button.yay:hover,
.button.icon-only-button.yay:hover,
button.icon-only-button.yay:focus-visible,
.button.icon-only-button.yay:focus-visible {
  background-color: #2B2B3D;
  border: none;
  color: #CCFFEE;
}

@media (prefers-reduced-motion) {
  html {
    scroll-behavior: auto;
  }
  a,
  .a,
  button,
  .button,
  input[type=text],
  input[type=password],
  textarea,
  input[type=radio],
  input[type=checkbox] {
    transition-duration: 0s;
  }
  .card,
  .card.double {
    perspective: none;
  }
  .card.double > .content {
    display: block;
    transition-duration: 0s;
    transform-style: flat;
    background-color: inherit;
    border-radius: 0px;
    align-items: normal;
    justify-content: normal;
    text-align: center;
  }
  .card.double > .content > .front,
  .card.double > .content > .back {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: #242433;
    border-radius: 0.8rem;
    align-items: center;
    justify-content: center;
    text-align: center;
    backface-visibility: visible;
    -webkit-backface-visibility: visible;
    -moz-backface-visibility: visible;
    transform: none;
  }
  .card.double > .content > .back {
    display: none;
    transform: none;
  }
  .card.double > .content > .front {
    display: flex;
  }
  .card.double.flip > .content {
    transform: none;
  }
  .card.double.flip > .content > .back {
    display: flex;
  }
  .card.double.flip > .content > .front {
    display: none;
  }
}

}

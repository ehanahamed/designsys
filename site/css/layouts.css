/*!
designsys (designsys.ehan.dev)
Copyright (c) 2023-present Ehan Ahamed and contributors
Licensed under the UPL-1.0 License
https://src.ehan.dev/designsys/LICENSE.txt
*/

*,
*:before,
*:after {
    box-sizing: border-box;
}

.center {
    text-align: center;
}

.flex {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}

.flex.row {
    flex-direction: row;
}

.flex.row.rev {
    flex-direction: row-reverse;
}

.flex.col {
    flex-direction: column;
}

.flex.col.rev {
    flex-direction: column-reverse;
}

.flex.nowrap {
    flex-wrap: nowrap;
}

.flex.wrap {
    flex-wrap: wrap;
}

.flex.start {
    justify-content: flex-start;
}

.flex.end {
    justify-content: flex-end;
}

.flex.center {
    justify-content: center;
}

.flex.spaceBetween {
    justify-content: space-between;
}

.flex.stretch {
    justify-content: stretch;
}

.flex.wrapstart {
    align-content: flex-start;
}

.flex.wrapend {
    align-content: flex-end;
}

.flex.wrapcenter {
    align-content: center;
}

.flex.wrapstretch {
    align-content: stretch;
}

.flex.wrapedge {
    align-content: space-between;
}

.flex.wrapspace {
    align-content: space-around;
}

.flex.itemscenter {
    align-items: center;
}

.flex.itemsstretch {
    align-items: stretch;
}

.flex.itemsstart {
    align-items: flex-start;
}

.flex.itemsend {
    align-items: flex-end;
}

.justifyselfstretch {
    justify-self: stretch;
}

.justifyselfcenter {
    justify-self: center;
}

.justifyselfstart {
    justify-self: start;
}

.justifyselfend {
    justify-self: end;
}

.grid {
    display: grid;
}

.grid.list {
    grid-template-columns: 1fr 1fr 1fr;
    gap: 1rem;
    margin-bottom: 2rem; /* temporary fix */
}

@media only screen and (max-width: 800px) {
    .grid.list {
        grid-template-columns: 1fr;
    }
}

.grid.hero {
    grid-template-columns: 6fr 2fr 6fr;
    grid-template-rows: 1fr;
    grid-template-areas:
        "content . logo";
}

.grid.hero > .content {
    grid-area: content;
    justify-self: end;
    align-self: center;
    text-align: center;
}

.grid.hero > .logo {
    grid-area: logo;
    justify-self: start;
    align-self: center;
}

@media only screen and (max-width: 800px) {
    .grid.hero {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr;
        grid-template-areas:
            "logo"
            "content";
    }

    .grid.hero > .content,
    .grid.hero > .logo {
        justify-self: center;
    }
}

.grid.split {
    grid-template-columns: 4fr 1fr 4fr;
    grid-template-rows: 1fr;
    grid-template-areas: "left middle right";
}

.grid.split > .left {
    grid-area: left;
}

.grid.split > .middle {
    grid-area: middle;
}

.grid.split > .right {
    grid-area: right;
}

.grid.page {
    grid-template-columns: 2fr 10fr 2fr;
    grid-template-rows: 1fr;
    grid-template-areas:
        ". content .";
}

.grid.page > .content {
    grid-area: content;
    justify-self: stretch;
    align-self: start;
}

@media only screen and (max-width: 800px) {
    .grid.page {
        grid-template-columns: 1fr 12fr 1fr;
    }
}

.grid.screen {
    height: 100%;
    margin: 0px 1rem;
}

.grid.screen > .content {
    justify-self: center;
    align-self: center;
    margin-top: 0px;
}

html.screen {
    height: 100%;
}

html.screen body {
    height: 100%;
    display: grid;
    grid-template-rows: auto 1fr;
}

header {
    display: grid;
    gap: 1rem;
    grid-template-columns: 1fr 4fr;
    grid-template-areas:
        "menu options";
}

header > .menu {
    grid-area: menu;
    text-align: left;
    justify-self: left;
}

header > .options {
    grid-area: options;
    text-align: right;
    justify-self: right;
    padding: 1rem;
}

.nav > div {
    height: 100%;
    display: flex;
    align-items: center;
}

/*

* + *        for default,
* + element  for reversing margin-top: 0px;

*/
* + *,
* + p {
    margin-top: 1rem;
}

.flex > *,
.grid > *,
header > *,
.radio > *,
.checkbox > *,
.caption > *,
.caption > div > *,
.nav > div {
    margin-top: 0px;
}

.grid.paragraph {
    gap: 1rem;
    grid-template-columns: 1fr 1fr;
    grid-template-areas: "content image";
}

.grid.paragraph.alt {
    grid-template-areas: "image content";
}

.grid.paragraph > .content {
    grid-area: content;
}

.grid.paragraph > .image {
    grid-area: image;
}

.grid.paragraph > .image > .image {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

@media only screen and (max-width: 1000px) {
    .grid.paragraph,
    .grid.paragraph.alt {
        gap: 1rem;
        grid-template-columns: 1fr;
        grid-template-rows: 1fr auto;
        grid-template-areas:
            "content"
            "image";
    }
}

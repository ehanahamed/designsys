/*!
  Design System (design.ehan.dev)
  Copyright (c) 2022-present Ehan Ahamed and contributors
  Licensed under the UPL-1.0 License
  https://design.ehan.dev/license
*/

html {
  height: auto;
  font-size: 18px;
  scroll-behavior: smooth;
}

@media only screen and (max-width: 800px) {
  html {
    font-size: 16px;
  }
}

body {
  height: auto;
  background-color: var(--bg1);
  color: var(--fg);
  font-size: 1rem;
  line-height: 1.4rem;
  font-family: sans-serif;
  font-weight: normal;
  margin: 0px;
}

::selection {
  background-color: var(--primaryAlt);
  color: var(--bg1);
}

h1,
.h1 {
  font-size: 4rem;
  line-height: 4.4rem;
  font-weight: bold;
  margin-bottom: 2rem;
}

h2,
.h2 {
  font-size: 2.4rem;
  line-height: 2.8rem;
  font-weight: bold;
  margin-bottom: 2rem;
}

h3,
.h3 {
  font-size: 1.6rem;
  line-height: 2rem;
  font-weight: bold;
  margin-bottom: 2rem;
}

h4,
.h4 {
  font-size: 1.2rem;
  line-height: 1.6rem;
  font-weight: bold;
  margin-bottom: 2rem;
}

h5,
.h5,
p {
  font-size: 1rem;
  line-height: 1.4rem;
  font-weight: normal;
  margin-top: 0px;
  margin-bottom: 1rem;
}
/* TEMPORARY FIX */
p {
  margin-block-end: 0px;
}

h6,
.h6 small {
  font-size: 0.8rem;
  line-height: 1.2rem;
  font-weight: normal;
  margin-bottom: 1rem;
}

b,
.b {
  font-weight: bold;
}

i,
.i {
  font-style: italic;
}

/*
nerdfont icons shouldn't have same styling as italic element lol
*/
i.nf {
  font-style: normal;
}

s,
.s {
  text-decoration: line-through;
}

mark,
.mark {
  background-color: var(--fg);
  color: var(--bg1);
  border-radius: 0.8rem;
  padding: 0.2rem 0.4rem;
  font-size: 1rem;
  line-height: 1.4rem;
}

code,
.code {
  font-family: monospace;
  background-color: var(--bg2);
  border-radius: 0.8rem;
  padding: 0.2rem 0.4rem;
  font-size: 1rem;
  line-height: 1.4rem;
}

.box {
  color: var(--fg);
  border: 0.2rem solid var(--bg2);
  border-radius: 0.8rem;
  padding: 1rem;
}

.hero {
  border-bottom: 0.2rem solid var(--bg2);
  text-align: center;
  padding: 1rem;
  padding-bottom: 4rem;
  margin: 4rem 1rem;
}

header,
.header {
  position: sticky;
  z-index: 100;

  /* TEMP*/
  height: 4rem;

  top: 0px;
  background-color: var(--bg1);
  border-bottom: 0.2rem solid var(--bg2);
  padding: 0px;
  margin: 0px;
}

header > .nav {
  display: flex;
  gap: 1rem;
  align-items: center;
  margin: 0px 1rem;
}

.nav > div {
  border-bottom: 0.2rem solid var(--bg1);
}

.nav > div.current {
  border-bottom: 0.2rem solid var(--primaryAlt);
}

.nav > div.current > a {
  color: var(--primaryAlt);
}

footer,
.footer {
  border-top: 0.2rem solid var(--bg2);
  text-align: center;
  padding: 1rem;
  padding-top: 4rem;
  margin: 4rem 1rem;
}

table {
  border-collapse: collapse;
  border-radius: 0.8rem;
}

td,
th {
  border: 0.2rem solid var(--bg2);
  text-align: left;
  padding: 1rem;
}

td {
  font-weight: normal;
}

th {
  font-weight: bold;
}

a,
.a {
  color: var(--primary);
  cursor: pointer;
  border-radius: 0.8rem;
  font-size: 1rem;
  line-height: 1.4rem;
  text-decoration: none;
  transition-duration: 0.4s;
}

a:hover,
a:focus-visible,
.a:hover,
.a:focus-visible {
  color: var(--primaryAlt);
}

a:focus-visible,
.a:focus-visible {
  outline: 0.2rem solid var(--primary);
  outline-offset: 0.4rem;
  transition-duration: 0.1s;
}

button,
.button {
  display: inline-block;
  appearance: none;
  align-items: flex-start;
  box-sizing: border-box;
  text-align: center;
  cursor: pointer;
  text-decoration: none;
  background-color: var(--primary);
  color: var(--bg1);
  border: 0.2rem solid var(--primary);
  border-radius: 0.8rem;
  padding: 0.4rem 0.8rem;
  font-size: 1rem;
  line-height: 1.4rem;
  transition-duration: 0.4s;
  /* 3D-ish stuff */
  box-shadow: 0px 0.2rem 0px var(--primaryDark);
}

button.alt,
.button.alt {
  background-color: var(--bg1);
  color: var(--primary);
}

button:hover,
button:focus-visible,
.button:hover,
.button:focus-visible {
  background-color: var(--primaryAlt);
  color: var(--bg1);
  /* 3D-ish stuff */
  box-shadow: none;
  transform: translateY(0.2rem);
}

button:focus-visible,
.button:focus-visible {
  outline: 0.2rem solid var(--primary);
  outline-offset: 0.2rem;
  transition-duration: 0.1s;
}

::placeholder {
  color: var(--bg3);
  font-size: 1rem;
  font-family: sans-serif;
  font-weight: normal;
  opacity: 1;
}

input[type="text"],
input[type="password"],
textarea {
  display: inline-block;
  appearance: none;
  align-items: flex-start;
  box-sizing: border-box;
  text-align: left;
  cursor: text;
  text-decoration: none;
  font-family: sans-serif;
  background-color: var(--bg1);
  color: var(--fg);
  border: 0.2rem solid var(--primary);
  border-radius: 0.8rem;
  padding: 0.4rem 0.8rem;
  font-size: 1rem;
  line-height: 1.4rem;
  transition-duration: 0.4s;
  /* 3D-ish stuff */
  box-shadow: 0px 0.2rem 0px var(--primaryDark);
}

input[type="text"]:hover,
input[type="text"]:focus-visible,
input[type="password"]:hover,
input[type="password"]:focus-visible,
textarea:hover,
textarea:focus-visible {
  border-color: var(--primaryAlt);
  /* 3D-ish stuff */
  box-shadow: none;
  transform: translateY(0.2rem);
}

input[type="text"]:focus-visible,
input[type="password"]:focus-visible,
textarea:focus-visible {
  outline: 0.2rem solid var(--primary);
  outline-offset: 0.2rem;
  transition-duration: 0.1s;
}

/*
the html of a radio should look like:

<div class="radio>
  <input type="radio" id="id" ... />
  <label for="id">text</label>
</div>
*/
.radio,
.checkbox {
  display: grid;
  grid-template-columns: 1.8rem auto 1fr;
  grid-template-areas: "input label .";
  gap: 1em;
}

.radio input,
.checkbox input {
  grid-area: input;
}

.radio label,
.checkbox label {
  grid-area: label;
}

input[type="radio"],
input[type="checkbox"] {
  /*
  https://moderncss.dev/pure-css-custom-styled-radio-buttons/
  https://moderncss.dev/pure-css-custom-checkbox-style/
  */
  appearance: none;
  width: 1.8rem;
  height: 1.8rem;
  margin: 0px;
  background-color: var(--bg1);
  border: 0.2rem solid var(--primary);
  transition-duration: 0.4s;
  /* 3D-ish stuff */
  box-shadow: 0px 0.2rem 0px var(--primaryDark);
}

input[type="radio"] {
  border-radius: 50%;
}

input[type="checkbox"] {
  border-radius: 0.6rem;
}

input[type="radio"]:hover,
input[type="radio"]:focus-visible,
input[type="checkbox"]:hover,
input[type="checkbox"]:focus-visible {
  border-color: var(--primaryAlt);
  /* 3D-ish stuff */
  box-shadow: none;
  transform: translateY(0.2rem);
}

input[type="radio"]:focus-visible,
input[type="checkbox"]:focus-visible {
  outline: 0.2rem solid var(--primary);
  outline-offset: 0.2rem;
  transition-duration: 0.1s;
}

input[type="radio"]:checked,
input[type="checkbox"]:checked {
  background-color: var(--primary);
  transition-duration: 0.1s;
  /* 3D-ish stuff */
  box-shadow: none;
  transform: translateY(0.2rem);
}

.card {
  width: 40rem;
  height: 20rem;
}

.caption {
  width: 40rem;
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr 4fr 1fr;
  grid-template-rows: 1fr;
}

@media only screen and (max-width: 800px) {
  .card,
  .caption {
    width: 100%;
  }
}

.card > .content {
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  background-color: var(--bg2);
  border-radius: 0.8rem;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.card.double {
  perspective: 1000px;
}

.card.double > .content {
  display: block;
  transition: transform 0.4s;
  transform-style: preserve-3d;
  background-color: inherit;
  border-radius: 0px;
  align-items: normal;
  justify-content: normal;
  text-align: center;
}

.card.double > .content > .front,
.card.double > .content > .back {
  display: flex;
  position: absolute;
  width: 100%;
  height: 100%;
  margin-top: 0px;
  background-color: var(--bg2);
  border-radius: 0.8rem;
  align-items: center;
  justify-content: center;
  text-align: center;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  transform: rotateX(0deg);
}

.card.double > .content > .back {
  transform: rotateY(180deg);
}

.card.double.flip > .content {
  transform: rotateY(180deg);
}

.separator {
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--bg3);
}

.separator::before,
.separator::after {
  content: "";
  display: block;
  background: var(--bg2);
  width: 100%;
  height: 0.2rem;
  margin: 0px 1rem;
}

.modal.filter {
  position: fixed;
  z-index: 180;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  background-color: var(--bg1);
  opacity: 0.2;
}

.modal.content {
  position: fixed;
  z-index: 200;
  top: 20vh;
  left: 20vw;
  width: 60vw;
  height: 60vh;
  background-color: var(--bg1);
}
